<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0/EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.unity_backend.Dao.UserInfo.UserInfoMapper">
    <resultMap id="WarehouseVO" type="com.example.unity_backend.Entity.WarehouseVO">
        <id column="UserName" property="UserName"/>
        <collection property="itemList" ofType="com.example.unity_backend.Entity.WarehouseItemDTO">
            <id column="ItemID"             property="ItemID"/>
            <result column="ItemName"        property="ItemName"/>
            <result column="Quantity"        property="Quantity"/>
        </collection>
    </resultMap>

    <resultMap id="StoreVO" type="com.example.unity_backend.Entity.StoreVO">
        <id     column="ItemID"          property="ItemID"/>
        <result column="ItemName"        property="ItemName"/>
        <result column="ItemPrice"       property="ItemPrice"/>
        <result column="CurrentDiscount" property="CurrentDiscount"/>
        <result column="is_owned"        property="isOwned"/>
    </resultMap>

    <select id="getUserBalance" resultType="com.example.unity_backend.Entity.User">
        select Balance from users where UserName=#{username}
    </select>

    <select id="getUserWareHouse" resultMap="WarehouseVO" parameterType="java.lang.String">
        select *
        from userwarehouse as u join item as i on u.ItemID=i.ItemID
        where u.UserName=#{username}
    </select>

    <select id="getStoreItem" resultMap="StoreVO">
        SELECT
        i.ItemID,
        i.ItemName,
        i.ItemPrice,
        i.CurrentDiscount,
        i.isDuplicate,
        CASE WHEN uw.ItemID IS NOT NULL THEN 1 ELSE 0 END AS is_owned
        FROM item i
        LEFT JOIN userwarehouse uw
        ON i.ItemID = uw.ItemID
        AND uw.UserName = #{userName}
    </select>



    <select id="getPurchaseItem" resultType="com.example.unity_backend.Entity.Item">
        select *
        from item
        where ItemId=#{itemid}
    </select>

    <update id="updateUserWarehouse">
        update userwarehouse
        set Quantity=#{Quantity}
        where UserName=#{UserName} and ItemID=#{ItemID}
    </update>

    <select id="getAUserWarehouseItem" resultType="com.example.unity_backend.Entity.UserWarehouse">
        select *
        from userwarehouse
        where UserName=#{username} and ItemID=#{itemid}
    </select>

    <insert id="newUserWarehouse">
        insert into userwarehouse
        (UserName,ItemID,Quantity)
        values
        (#{UserName},#{ItemID},#{Quantity})
    </insert>

    <update id="updateUserBalance">
        update users
        set Balance=#{balance}
        where UserName=#{username}
    </update>

    <select id="getNicknamebyUsername" resultType="java.lang.String">
        select NickName
        from users
        where UserName=#{username}
    </select>

    <select id="getItemNum" resultType="java.lang.Integer">
        select COALESCE(Quantity,0) as num
        from userwarehouse
        where UserName=#{username} and ItemID=#{itemid}
    </select>

    <update id="setItemNum">
        update userwarehouse
        set Quantity=#{itemnum}
        where UserName=#{username} and ItemID=#{itemid}
    </update>

</mapper>